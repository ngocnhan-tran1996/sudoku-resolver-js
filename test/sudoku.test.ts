import {describe, expect, test} from 'vitest'
import {hasSameArray, solveSudoku} from "../src/sudoku";

describe.for([
  {
    input: [
      [0, 0, 1, 4, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 6, 2, 0, 0, 0],
      [0, 0, 7, 0, 0, 0, 9, 1, 0],
      [8, 3, 0, 0, 0, 0, 0, 9, 0],
      [0, 0, 4, 9, 1, 0, 8, 0, 5],
      [0, 0, 0, 6, 0, 7, 0, 0, 0],
      [7, 0, 0, 0, 4, 0, 6, 0, 0],
      [0, 9, 0, 0, 0, 0, 0, 0, 0],
      [5, 0, 2, 0, 0, 0, 3, 0, 4]
    ],
    expected: null,
    description: "Easy Sudoku"
  },
  {
    input: [
      [0, 2, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 2, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0]
    ],
    expected: "Trùng số ở hàng hoặc cột hoặc ô",
    description: "Duplicate in Square"
  },
  {
    input: [
      [0, 2, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 2, 0, 0, 0, 0, 0, 0, 0]
    ],
    expected: "Trùng số ở hàng hoặc cột hoặc ô",
    description: "Duplicate in Vertical"
  },
  {
    input: [
      [0, 2, 0, 0, 0, 0, 0, 2, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0]
    ],
    expected: "Trùng số ở hàng hoặc cột hoặc ô",
    description: "Duplicate in Horizontal"
  },
])('Sudoku Test', ({input, expected, description}) => {

  test(description, () => {
    expect(solveSudoku(input, 0, 0)).toEqual(expected)
  })

})

describe.for([
  {
    a: [
      [0, 0, 1, 4, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 6, 2, 0, 0, 0],
      [0, 0, 7, 0, 0, 0, 9, 1, 0],
      [8, 3, 0, 0, 0, 0, 0, 9, 0],
      [0, 0, 4, 9, 1, 0, 8, 0, 5],
      [0, 0, 0, 6, 0, 7, 0, 0, 0],
      [7, 0, 0, 0, 4, 0, 6, 0, 0],
      [0, 9, 0, 0, 0, 0, 0, 0, 0],
      [5, 0, 2, 0, 0, 0, 3, 0, 4]
    ],
    b: [
      [3, 2, 1, 4, 7, 9, 5, 8, 6],
      [9, 8, 5, 1, 6, 2, 4, 3, 7],
      [6, 4, 7, 5, 3, 8, 9, 1, 2],
      [8, 3, 6, 2, 5, 4, 7, 9, 1],
      [2, 7, 4, 9, 1, 3, 8, 6, 5],
      [1, 5, 9, 6, 8, 7, 2, 4, 3],
      [7, 1, 8, 3, 4, 5, 6, 2, 9],
      [4, 9, 3, 7, 2, 6, 1, 5, 8],
      [5, 6, 2, 8, 9, 1, 3, 7, 4]
    ],
    result: false
  },
  {
    a: [
      [0, 2, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 2, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0]
    ],
    b: [
      [0, 2, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 2, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0]
    ],
    result: true
  }
])('Sudoku Test', ({a, b, result}) => {

  test("Test hasSameArray", () => {
    expect(hasSameArray(a, b)).toBe(result)
  })

})